package org.openpnp.libuvc4j;
import java.util.Collections;
import java.util.Iterator;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Callback;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Ptr;
import org.bridj.ann.Runtime;
/**
 * Wrapper for library <b>uvc</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("uvc") 
@Runtime(CRuntime.class) 
public class UvcLibrary {
	static {
		BridJ.register();
	}
	/**
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:22</i>
	 */
	public enum uvc_error implements IntValuedEnum<uvc_error > {
		UVC_SUCCESS(0),
		UVC_ERROR_IO(-1),
		UVC_ERROR_INVALID_PARAM(-2),
		UVC_ERROR_ACCESS(-3),
		UVC_ERROR_NO_DEVICE(-4),
		UVC_ERROR_NOT_FOUND(-5),
		UVC_ERROR_BUSY(-6),
		UVC_ERROR_TIMEOUT(-7),
		UVC_ERROR_OVERFLOW(-8),
		UVC_ERROR_PIPE(-9),
		UVC_ERROR_INTERRUPTED(-10),
		UVC_ERROR_NO_MEM(-11),
		UVC_ERROR_NOT_SUPPORTED(-12),
		UVC_ERROR_INVALID_DEVICE(-50),
		UVC_ERROR_INVALID_MODE(-51),
		UVC_ERROR_CALLBACK_EXISTS(-52),
		UVC_ERROR_OTHER(-99);
		uvc_error(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_error > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_error > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * Color coding of stream, transport-independent<br>
	 * @ingroup streaming<br>
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:40</i>
	 */
	public enum uvc_frame_format implements IntValuedEnum<uvc_frame_format > {
		UVC_FRAME_FORMAT_UNKNOWN(0),
		UVC_FRAME_FORMAT_ANY(0),
		UVC_FRAME_FORMAT_UNCOMPRESSED(1),
		UVC_FRAME_FORMAT_COMPRESSED(2),
		UVC_FRAME_FORMAT_YUYV(3),
		UVC_FRAME_FORMAT_UYVY(4),
		UVC_FRAME_FORMAT_RGB(5),
		UVC_FRAME_FORMAT_BGR(6),
		UVC_FRAME_FORMAT_MJPEG(7),
		UVC_FRAME_FORMAT_GRAY8(8),
		UVC_FRAME_FORMAT_BY8(9),
		UVC_FRAME_FORMAT_COUNT(10);
		uvc_frame_format(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_frame_format > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_frame_format > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * VideoStreaming interface descriptor subtype (A.6)<br>
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:57</i>
	 */
	public enum uvc_vs_desc_subtype implements IntValuedEnum<uvc_vs_desc_subtype > {
		UVC_VS_UNDEFINED(0x00),
		UVC_VS_INPUT_HEADER(0x01),
		UVC_VS_OUTPUT_HEADER(0x02),
		UVC_VS_STILL_IMAGE_FRAME(0x03),
		UVC_VS_FORMAT_UNCOMPRESSED(0x04),
		UVC_VS_FRAME_UNCOMPRESSED(0x05),
		UVC_VS_FORMAT_MJPEG(0x06),
		UVC_VS_FRAME_MJPEG(0x07),
		UVC_VS_FORMAT_MPEG2TS(0x0a),
		UVC_VS_FORMAT_DV(0x0c),
		UVC_VS_COLORFORMAT(0x0d),
		UVC_VS_FORMAT_FRAME_BASED(0x10),
		UVC_VS_FRAME_FRAME_BASED(0x11),
		UVC_VS_FORMAT_STREAM_BASED(0x12);
		uvc_vs_desc_subtype(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_vs_desc_subtype > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_vs_desc_subtype > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * UVC request code (A.8)<br>
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:131</i>
	 */
	public enum uvc_req_code implements IntValuedEnum<uvc_req_code > {
		UVC_RC_UNDEFINED(0x00),
		UVC_SET_CUR(0x01),
		UVC_GET_CUR(0x81),
		UVC_GET_MIN(0x82),
		UVC_GET_MAX(0x83),
		UVC_GET_RES(0x84),
		UVC_GET_LEN(0x85),
		UVC_GET_INFO(0x86),
		UVC_GET_DEF(0x87);
		uvc_req_code(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_req_code > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_req_code > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:135</i>
	 */
	public enum uvc_device_power_mode implements IntValuedEnum<uvc_device_power_mode > {
		UVC_VC_VIDEO_POWER_MODE_FULL(0x000b),
		UVC_VC_VIDEO_POWER_MODE_DEVICE_DEPENDENT(0x001b);
		uvc_device_power_mode(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_device_power_mode > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_device_power_mode > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * Camera terminal control selector (A.9.4)<br>
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:159</i>
	 */
	public enum uvc_ct_ctrl_selector implements IntValuedEnum<uvc_ct_ctrl_selector > {
		UVC_CT_CONTROL_UNDEFINED(0x00),
		UVC_CT_SCANNING_MODE_CONTROL(0x01),
		UVC_CT_AE_MODE_CONTROL(0x02),
		UVC_CT_AE_PRIORITY_CONTROL(0x03),
		UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL(0x04),
		UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL(0x05),
		UVC_CT_FOCUS_ABSOLUTE_CONTROL(0x06),
		UVC_CT_FOCUS_RELATIVE_CONTROL(0x07),
		UVC_CT_FOCUS_AUTO_CONTROL(0x08),
		UVC_CT_IRIS_ABSOLUTE_CONTROL(0x09),
		UVC_CT_IRIS_RELATIVE_CONTROL(0x0a),
		UVC_CT_ZOOM_ABSOLUTE_CONTROL(0x0b),
		UVC_CT_ZOOM_RELATIVE_CONTROL(0x0c),
		UVC_CT_PANTILT_ABSOLUTE_CONTROL(0x0d),
		UVC_CT_PANTILT_RELATIVE_CONTROL(0x0e),
		UVC_CT_ROLL_ABSOLUTE_CONTROL(0x0f),
		UVC_CT_ROLL_RELATIVE_CONTROL(0x10),
		UVC_CT_PRIVACY_CONTROL(0x11),
		UVC_CT_FOCUS_SIMPLE_CONTROL(0x12),
		UVC_CT_DIGITAL_WINDOW_CONTROL(0x13),
		UVC_CT_REGION_OF_INTEREST_CONTROL(0x14);
		uvc_ct_ctrl_selector(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_ct_ctrl_selector > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_ct_ctrl_selector > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * Processing unit control selector (A.9.5)<br>
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:182</i>
	 */
	public enum uvc_pu_ctrl_selector implements IntValuedEnum<uvc_pu_ctrl_selector > {
		UVC_PU_CONTROL_UNDEFINED(0x00),
		UVC_PU_BACKLIGHT_COMPENSATION_CONTROL(0x01),
		UVC_PU_BRIGHTNESS_CONTROL(0x02),
		UVC_PU_CONTRAST_CONTROL(0x03),
		UVC_PU_GAIN_CONTROL(0x04),
		UVC_PU_POWER_LINE_FREQUENCY_CONTROL(0x05),
		UVC_PU_HUE_CONTROL(0x06),
		UVC_PU_SATURATION_CONTROL(0x07),
		UVC_PU_SHARPNESS_CONTROL(0x08),
		UVC_PU_GAMMA_CONTROL(0x09),
		UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL(0x0a),
		UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL(0x0b),
		UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL(0x0c),
		UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL(0x0d),
		UVC_PU_DIGITAL_MULTIPLIER_CONTROL(0x0e),
		UVC_PU_DIGITAL_MULTIPLIER_LIMIT_CONTROL(0x0f),
		UVC_PU_HUE_AUTO_CONTROL(0x10),
		UVC_PU_ANALOG_VIDEO_STANDARD_CONTROL(0x11),
		UVC_PU_ANALOG_LOCK_STATUS_CONTROL(0x12),
		UVC_PU_CONTRAST_AUTO_CONTROL(0x13);
		uvc_pu_ctrl_selector(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_pu_ctrl_selector > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_pu_ctrl_selector > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * USB terminal type (B.1)<br>
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:187</i>
	 */
	public enum uvc_term_type implements IntValuedEnum<uvc_term_type > {
		UVC_TT_VENDOR_SPECIFIC(0x0100),
		UVC_TT_STREAMING(0x0101);
		uvc_term_type(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_term_type > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_term_type > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * Input terminal type (B.2)<br>
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:193</i>
	 */
	public enum uvc_it_type implements IntValuedEnum<uvc_it_type > {
		UVC_ITT_VENDOR_SPECIFIC(0x0200),
		UVC_ITT_CAMERA(0x0201),
		UVC_ITT_MEDIA_TRANSPORT_INPUT(0x0202);
		uvc_it_type(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_it_type > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_it_type > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * Output terminal type (B.3)<br>
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:199</i>
	 */
	public enum uvc_ot_type implements IntValuedEnum<uvc_ot_type > {
		UVC_OTT_VENDOR_SPECIFIC(0x0300),
		UVC_OTT_DISPLAY(0x0301),
		UVC_OTT_MEDIA_TRANSPORT_OUTPUT(0x0302);
		uvc_ot_type(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_ot_type > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_ot_type > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * External terminal type (B.4)<br>
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:206</i>
	 */
	public enum uvc_et_type implements IntValuedEnum<uvc_et_type > {
		UVC_EXTERNAL_VENDOR_SPECIFIC(0x0400),
		UVC_COMPOSITE_CONNECTOR(0x0401),
		UVC_SVIDEO_CONNECTOR(0x0402),
		UVC_COMPONENT_CONNECTOR(0x0403);
		uvc_et_type(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_et_type > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_et_type > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:271</i>
	 */
	public enum uvc_status_class implements IntValuedEnum<uvc_status_class > {
		UVC_STATUS_CLASS_CONTROL(0x10),
		UVC_STATUS_CLASS_CONTROL_CAMERA(0x11),
		UVC_STATUS_CLASS_CONTROL_PROCESSING(0x12);
		uvc_status_class(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_status_class > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_status_class > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:277</i>
	 */
	public enum uvc_status_attribute implements IntValuedEnum<uvc_status_attribute > {
		UVC_STATUS_ATTRIBUTE_VALUE_CHANGE(0x00),
		UVC_STATUS_ATTRIBUTE_INFO_CHANGE(0x01),
		UVC_STATUS_ATTRIBUTE_FAILURE_CHANGE(0x02),
		UVC_STATUS_ATTRIBUTE_UNKNOWN(0xff);
		uvc_status_attribute(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<uvc_status_attribute > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<uvc_status_attribute > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/** <i>native declaration : /usr/local/include/libuvc/libuvc_config.h</i> */
	public static final int LIBUVC_VERSION_MAJOR = (int)0;
	/** <i>native declaration : /usr/local/include/libuvc/libuvc_config.h</i> */
	public static final int LIBUVC_VERSION_MINOR = (int)0;
	/** <i>native declaration : /usr/local/include/libuvc/libuvc_config.h</i> */
	public static final int LIBUVC_VERSION_PATCH = (int)5;
	/** <i>native declaration : /usr/local/include/libuvc/libuvc_config.h</i> */
	public static final String LIBUVC_VERSION_STR = (String)"0.0.5";
	/** <i>native declaration : /usr/local/include/libuvc/libuvc_config.h</i> */
	public static final int LIBUVC_VERSION_INT = (int)((0 << 16) | (0 << 8) | (5));
	/** <i>native declaration : /usr/local/include/libuvc/libuvc_config.h</i> */
	public static final int LIBUVC_HAS_JPEG = (int)1;
	/**
	 * A callback function to accept status updates<br>
	 * @ingroup device<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:282</i>
	 */
	public static abstract class uvc_status_callback_t extends Callback<uvc_status_callback_t > {
		public void apply(IntValuedEnum<UvcLibrary.uvc_status_class > status_class, int event, int selector, IntValuedEnum<UvcLibrary.uvc_status_attribute > status_attribute, Pointer<? > data, @Ptr long data_len, Pointer<? > user_ptr) {
			apply((int)status_class.value(), event, selector, (int)status_attribute.value(), Pointer.getPeer(data), data_len, Pointer.getPeer(user_ptr));
		}
		public void apply(int status_class, int event, int selector, int status_attribute, @Ptr long data, @Ptr long data_len, @Ptr long user_ptr) {
			apply(FlagSet.fromValue(status_class, UvcLibrary.uvc_status_class.class), event, selector, FlagSet.fromValue(status_attribute, UvcLibrary.uvc_status_attribute.class), Pointer.pointerToAddress(data), data_len, Pointer.pointerToAddress(user_ptr));
		}
	};
	/**
	 * A callback function to accept button events<br>
	 * @ingroup device<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:287</i>
	 */
	public static abstract class uvc_button_callback_t extends Callback<uvc_button_callback_t > {
		public void apply(int button, int state, Pointer<? > user_ptr) {
			apply(button, state, Pointer.getPeer(user_ptr));
		}
		public void apply(int button, int state, @Ptr long user_ptr) {
			apply(button, state, Pointer.pointerToAddress(user_ptr));
		}
	};
	/**
	 * A callback function to handle incoming assembled UVC frames<br>
	 * @ingroup streaming<br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:322</i>
	 */
	public static abstract class uvc_frame_callback_t extends Callback<uvc_frame_callback_t > {
		public void apply(Pointer<uvc_frame > frame, Pointer<? > user_ptr) {
			apply(Pointer.getPeer(frame), Pointer.getPeer(user_ptr));
		}
		public void apply(@Ptr long frame, @Ptr long user_ptr) {
			apply((Pointer)Pointer.pointerToAddress(frame, uvc_frame.class), Pointer.pointerToAddress(user_ptr));
		}
	};
	/**
	 * Original signature : <code>uvc_error_t uvc_init(uvc_context_t**, libusb_context*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:347</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_init(Pointer<Pointer<UvcLibrary.uvc_context > > ctx, Pointer<UvcLibrary.libusb_context > usb_ctx) {
		return FlagSet.fromValue(uvc_init(Pointer.getPeer(ctx), Pointer.getPeer(usb_ctx)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_init(@Ptr long ctx, @Ptr long usb_ctx);
	/**
	 * Original signature : <code>void uvc_exit(uvc_context_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:349</i>
	 */
	public static void uvc_exit(Pointer<UvcLibrary.uvc_context > ctx) {
		uvc_exit(Pointer.getPeer(ctx));
	}
	protected native static void uvc_exit(@Ptr long ctx);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_device_list(uvc_context_t*, uvc_device_t***)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:351</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_device_list(Pointer<UvcLibrary.uvc_context > ctx, Pointer<Pointer<Pointer<UvcLibrary.uvc_device > > > list) {
		return FlagSet.fromValue(uvc_get_device_list(Pointer.getPeer(ctx), Pointer.getPeer(list)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_device_list(@Ptr long ctx, @Ptr long list);
	/**
	 * Original signature : <code>void uvc_free_device_list(uvc_device_t**, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:353</i>
	 */
	public static void uvc_free_device_list(Pointer<Pointer<UvcLibrary.uvc_device > > list, byte unref_devices) {
		uvc_free_device_list(Pointer.getPeer(list), unref_devices);
	}
	protected native static void uvc_free_device_list(@Ptr long list, byte unref_devices);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_device_descriptor(uvc_device_t*, uvc_device_descriptor_t**)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:355</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_device_descriptor(Pointer<UvcLibrary.uvc_device > dev, Pointer<Pointer<uvc_device_descriptor > > desc) {
		return FlagSet.fromValue(uvc_get_device_descriptor(Pointer.getPeer(dev), Pointer.getPeer(desc)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_device_descriptor(@Ptr long dev, @Ptr long desc);
	/**
	 * Original signature : <code>void uvc_free_device_descriptor(uvc_device_descriptor_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:357</i>
	 */
	public static void uvc_free_device_descriptor(Pointer<uvc_device_descriptor > desc) {
		uvc_free_device_descriptor(Pointer.getPeer(desc));
	}
	protected native static void uvc_free_device_descriptor(@Ptr long desc);
	/**
	 * Original signature : <code>uint8_t uvc_get_bus_number(uvc_device_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:359</i>
	 */
	public static byte uvc_get_bus_number(Pointer<UvcLibrary.uvc_device > dev) {
		return uvc_get_bus_number(Pointer.getPeer(dev));
	}
	protected native static byte uvc_get_bus_number(@Ptr long dev);
	/**
	 * Original signature : <code>uint8_t uvc_get_device_address(uvc_device_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:361</i>
	 */
	public static byte uvc_get_device_address(Pointer<UvcLibrary.uvc_device > dev) {
		return uvc_get_device_address(Pointer.getPeer(dev));
	}
	protected native static byte uvc_get_device_address(@Ptr long dev);
	/**
	 * Original signature : <code>uvc_error_t uvc_find_device(uvc_context_t*, uvc_device_t**, int, int, const char*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:363</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_find_device(Pointer<UvcLibrary.uvc_context > ctx, Pointer<Pointer<UvcLibrary.uvc_device > > dev, int vid, int pid, Pointer<Byte > sn) {
		return FlagSet.fromValue(uvc_find_device(Pointer.getPeer(ctx), Pointer.getPeer(dev), vid, pid, Pointer.getPeer(sn)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_find_device(@Ptr long ctx, @Ptr long dev, int vid, int pid, @Ptr long sn);
	/**
	 * Original signature : <code>uvc_error_t uvc_open(uvc_device_t*, uvc_device_handle_t**)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:365</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_open(Pointer<UvcLibrary.uvc_device > dev, Pointer<Pointer<UvcLibrary.uvc_device_handle > > devh) {
		return FlagSet.fromValue(uvc_open(Pointer.getPeer(dev), Pointer.getPeer(devh)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_open(@Ptr long dev, @Ptr long devh);
	/**
	 * Original signature : <code>void uvc_close(uvc_device_handle_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:367</i>
	 */
	public static void uvc_close(Pointer<UvcLibrary.uvc_device_handle > devh) {
		uvc_close(Pointer.getPeer(devh));
	}
	protected native static void uvc_close(@Ptr long devh);
	/**
	 * Original signature : <code>uvc_device_t* uvc_get_device(uvc_device_handle_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:369</i>
	 */
	public static Pointer<UvcLibrary.uvc_device > uvc_get_device(Pointer<UvcLibrary.uvc_device_handle > devh) {
		return (Pointer)Pointer.pointerToAddress(uvc_get_device(Pointer.getPeer(devh)), UvcLibrary.uvc_device.class);
	}
	@Ptr 
	protected native static long uvc_get_device(@Ptr long devh);
	/**
	 * Original signature : <code>libusb_device_handle* uvc_get_libusb_handle(uvc_device_handle_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:371</i>
	 */
	public static Pointer<UvcLibrary.libusb_device_handle > uvc_get_libusb_handle(Pointer<UvcLibrary.uvc_device_handle > devh) {
		return (Pointer)Pointer.pointerToAddress(uvc_get_libusb_handle(Pointer.getPeer(devh)), UvcLibrary.libusb_device_handle.class);
	}
	@Ptr 
	protected native static long uvc_get_libusb_handle(@Ptr long devh);
	/**
	 * Original signature : <code>void uvc_ref_device(uvc_device_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:373</i>
	 */
	public static void uvc_ref_device(Pointer<UvcLibrary.uvc_device > dev) {
		uvc_ref_device(Pointer.getPeer(dev));
	}
	protected native static void uvc_ref_device(@Ptr long dev);
	/**
	 * Original signature : <code>void uvc_unref_device(uvc_device_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:375</i>
	 */
	public static void uvc_unref_device(Pointer<UvcLibrary.uvc_device > dev) {
		uvc_unref_device(Pointer.getPeer(dev));
	}
	protected native static void uvc_unref_device(@Ptr long dev);
	/**
	 * Original signature : <code>void uvc_set_status_callback(uvc_device_handle_t*, uvc_status_callback_t, void*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:377</i>
	 */
	public static void uvc_set_status_callback(Pointer<UvcLibrary.uvc_device_handle > devh, UvcLibrary.uvc_status_callback_t cb, Pointer<? > user_ptr) {
		uvc_set_status_callback(Pointer.getPeer(devh), cb, Pointer.getPeer(user_ptr));
	}
	protected native static void uvc_set_status_callback(@Ptr long devh, UvcLibrary.uvc_status_callback_t cb, @Ptr long user_ptr);
	/**
	 * Original signature : <code>void uvc_set_button_callback(uvc_device_handle_t*, uvc_button_callback_t, void*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:379</i>
	 */
	public static void uvc_set_button_callback(Pointer<UvcLibrary.uvc_device_handle > devh, UvcLibrary.uvc_button_callback_t cb, Pointer<? > user_ptr) {
		uvc_set_button_callback(Pointer.getPeer(devh), cb, Pointer.getPeer(user_ptr));
	}
	protected native static void uvc_set_button_callback(@Ptr long devh, UvcLibrary.uvc_button_callback_t cb, @Ptr long user_ptr);
	/**
	 * Original signature : <code>uvc_input_terminal_t* uvc_get_input_terminals(uvc_device_handle_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:381</i>
	 */
	public static Pointer<uvc_input_terminal > uvc_get_input_terminals(Pointer<UvcLibrary.uvc_device_handle > devh) {
		return (Pointer)Pointer.pointerToAddress(uvc_get_input_terminals(Pointer.getPeer(devh)), uvc_input_terminal.class);
	}
	@Ptr 
	protected native static long uvc_get_input_terminals(@Ptr long devh);
	/**
	 * Original signature : <code>uvc_output_terminal_t* uvc_get_output_terminals(uvc_device_handle_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:383</i>
	 */
	public static Pointer<uvc_output_terminal > uvc_get_output_terminals(Pointer<UvcLibrary.uvc_device_handle > devh) {
		return (Pointer)Pointer.pointerToAddress(uvc_get_output_terminals(Pointer.getPeer(devh)), uvc_output_terminal.class);
	}
	@Ptr 
	protected native static long uvc_get_output_terminals(@Ptr long devh);
	/**
	 * Original signature : <code>uvc_processing_unit_t* uvc_get_processing_units(uvc_device_handle_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:385</i>
	 */
	public static Pointer<uvc_processing_unit > uvc_get_processing_units(Pointer<UvcLibrary.uvc_device_handle > devh) {
		return (Pointer)Pointer.pointerToAddress(uvc_get_processing_units(Pointer.getPeer(devh)), uvc_processing_unit.class);
	}
	@Ptr 
	protected native static long uvc_get_processing_units(@Ptr long devh);
	/**
	 * Original signature : <code>uvc_extension_unit_t* uvc_get_extension_units(uvc_device_handle_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:387</i>
	 */
	public static Pointer<uvc_extension_unit > uvc_get_extension_units(Pointer<UvcLibrary.uvc_device_handle > devh) {
		return (Pointer)Pointer.pointerToAddress(uvc_get_extension_units(Pointer.getPeer(devh)), uvc_extension_unit.class);
	}
	@Ptr 
	protected native static long uvc_get_extension_units(@Ptr long devh);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_stream_ctrl_format_size(uvc_device_handle_t*, uvc_stream_ctrl_t*, uvc_frame_format, int, int, int)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:389</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_stream_ctrl_format_size(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<uvc_stream_ctrl > ctrl, IntValuedEnum<UvcLibrary.uvc_frame_format > format, int width, int height, int fps) {
		return FlagSet.fromValue(uvc_get_stream_ctrl_format_size(Pointer.getPeer(devh), Pointer.getPeer(ctrl), (int)format.value(), width, height, fps), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_stream_ctrl_format_size(@Ptr long devh, @Ptr long ctrl, int format, int width, int height, int fps);
	/**
	 * Original signature : <code>uvc_format_desc_t* uvc_get_format_descs(uvc_device_handle_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:391</i>
	 */
	public static Pointer<uvc_format_desc > uvc_get_format_descs(Pointer<UvcLibrary.uvc_device_handle > uvc_device_handle_tPtr1) {
		return (Pointer)Pointer.pointerToAddress(uvc_get_format_descs(Pointer.getPeer(uvc_device_handle_tPtr1)), uvc_format_desc.class);
	}
	@Ptr 
	protected native static long uvc_get_format_descs(@Ptr long uvc_device_handle_tPtr1);
	/**
	 * Original signature : <code>uvc_error_t uvc_probe_stream_ctrl(uvc_device_handle_t*, uvc_stream_ctrl_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:393</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_probe_stream_ctrl(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<uvc_stream_ctrl > ctrl) {
		return FlagSet.fromValue(uvc_probe_stream_ctrl(Pointer.getPeer(devh), Pointer.getPeer(ctrl)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_probe_stream_ctrl(@Ptr long devh, @Ptr long ctrl);
	/**
	 * Original signature : <code>uvc_error_t uvc_start_streaming(uvc_device_handle_t*, uvc_stream_ctrl_t*, uvc_frame_callback_t*, void*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:395</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_start_streaming(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<uvc_stream_ctrl > ctrl, Pointer<UvcLibrary.uvc_frame_callback_t > cb, Pointer<? > user_ptr, byte flags) {
		return FlagSet.fromValue(uvc_start_streaming(Pointer.getPeer(devh), Pointer.getPeer(ctrl), Pointer.getPeer(cb), Pointer.getPeer(user_ptr), flags), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_start_streaming(@Ptr long devh, @Ptr long ctrl, @Ptr long cb, @Ptr long user_ptr, byte flags);
	/**
	 * Original signature : <code>uvc_error_t uvc_start_iso_streaming(uvc_device_handle_t*, uvc_stream_ctrl_t*, uvc_frame_callback_t*, void*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:397</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_start_iso_streaming(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<uvc_stream_ctrl > ctrl, Pointer<UvcLibrary.uvc_frame_callback_t > cb, Pointer<? > user_ptr) {
		return FlagSet.fromValue(uvc_start_iso_streaming(Pointer.getPeer(devh), Pointer.getPeer(ctrl), Pointer.getPeer(cb), Pointer.getPeer(user_ptr)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_start_iso_streaming(@Ptr long devh, @Ptr long ctrl, @Ptr long cb, @Ptr long user_ptr);
	/**
	 * Original signature : <code>void uvc_stop_streaming(uvc_device_handle_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:399</i>
	 */
	public static void uvc_stop_streaming(Pointer<UvcLibrary.uvc_device_handle > devh) {
		uvc_stop_streaming(Pointer.getPeer(devh));
	}
	protected native static void uvc_stop_streaming(@Ptr long devh);
	/**
	 * Original signature : <code>uvc_error_t uvc_stream_open_ctrl(uvc_device_handle_t*, uvc_stream_handle_t**, uvc_stream_ctrl_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:401</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_stream_open_ctrl(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Pointer<UvcLibrary.uvc_stream_handle > > strmh, Pointer<uvc_stream_ctrl > ctrl) {
		return FlagSet.fromValue(uvc_stream_open_ctrl(Pointer.getPeer(devh), Pointer.getPeer(strmh), Pointer.getPeer(ctrl)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_stream_open_ctrl(@Ptr long devh, @Ptr long strmh, @Ptr long ctrl);
	/**
	 * Original signature : <code>uvc_error_t uvc_stream_ctrl(uvc_stream_handle_t*, uvc_stream_ctrl_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:403</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_stream_ctrl(Pointer<UvcLibrary.uvc_stream_handle > strmh, Pointer<uvc_stream_ctrl > ctrl) {
		return FlagSet.fromValue(uvc_stream_ctrl(Pointer.getPeer(strmh), Pointer.getPeer(ctrl)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_stream_ctrl(@Ptr long strmh, @Ptr long ctrl);
	/**
	 * Original signature : <code>uvc_error_t uvc_stream_start(uvc_stream_handle_t*, uvc_frame_callback_t*, void*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:405</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_stream_start(Pointer<UvcLibrary.uvc_stream_handle > strmh, Pointer<UvcLibrary.uvc_frame_callback_t > cb, Pointer<? > user_ptr, byte flags) {
		return FlagSet.fromValue(uvc_stream_start(Pointer.getPeer(strmh), Pointer.getPeer(cb), Pointer.getPeer(user_ptr), flags), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_stream_start(@Ptr long strmh, @Ptr long cb, @Ptr long user_ptr, byte flags);
	/**
	 * Original signature : <code>uvc_error_t uvc_stream_start_iso(uvc_stream_handle_t*, uvc_frame_callback_t*, void*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:407</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_stream_start_iso(Pointer<UvcLibrary.uvc_stream_handle > strmh, Pointer<UvcLibrary.uvc_frame_callback_t > cb, Pointer<? > user_ptr) {
		return FlagSet.fromValue(uvc_stream_start_iso(Pointer.getPeer(strmh), Pointer.getPeer(cb), Pointer.getPeer(user_ptr)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_stream_start_iso(@Ptr long strmh, @Ptr long cb, @Ptr long user_ptr);
	/**
	 * Original signature : <code>uvc_error_t uvc_stream_get_frame(uvc_stream_handle_t*, uvc_frame_t**, int32_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:409</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_stream_get_frame(Pointer<UvcLibrary.uvc_stream_handle > strmh, Pointer<Pointer<uvc_frame > > frame, int timeout_us) {
		return FlagSet.fromValue(uvc_stream_get_frame(Pointer.getPeer(strmh), Pointer.getPeer(frame), timeout_us), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_stream_get_frame(@Ptr long strmh, @Ptr long frame, int timeout_us);
	/**
	 * Original signature : <code>uvc_error_t uvc_stream_stop(uvc_stream_handle_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:411</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_stream_stop(Pointer<UvcLibrary.uvc_stream_handle > strmh) {
		return FlagSet.fromValue(uvc_stream_stop(Pointer.getPeer(strmh)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_stream_stop(@Ptr long strmh);
	/**
	 * Original signature : <code>void uvc_stream_close(uvc_stream_handle_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:413</i>
	 */
	public static void uvc_stream_close(Pointer<UvcLibrary.uvc_stream_handle > strmh) {
		uvc_stream_close(Pointer.getPeer(strmh));
	}
	protected native static void uvc_stream_close(@Ptr long strmh);
	/**
	 * Original signature : <code>int uvc_get_ctrl_len(uvc_device_handle_t*, uint8_t, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:415</i>
	 */
	public static int uvc_get_ctrl_len(Pointer<UvcLibrary.uvc_device_handle > devh, byte unit, byte ctrl) {
		return uvc_get_ctrl_len(Pointer.getPeer(devh), unit, ctrl);
	}
	protected native static int uvc_get_ctrl_len(@Ptr long devh, byte unit, byte ctrl);
	/**
	 * Original signature : <code>int uvc_get_ctrl(uvc_device_handle_t*, uint8_t, uint8_t, void*, int, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:417</i>
	 */
	public static int uvc_get_ctrl(Pointer<UvcLibrary.uvc_device_handle > devh, byte unit, byte ctrl, Pointer<? > data, int len, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return uvc_get_ctrl(Pointer.getPeer(devh), unit, ctrl, Pointer.getPeer(data), len, (int)req_code.value());
	}
	protected native static int uvc_get_ctrl(@Ptr long devh, byte unit, byte ctrl, @Ptr long data, int len, int req_code);
	/**
	 * Original signature : <code>int uvc_set_ctrl(uvc_device_handle_t*, uint8_t, uint8_t, void*, int)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:419</i>
	 */
	public static int uvc_set_ctrl(Pointer<UvcLibrary.uvc_device_handle > devh, byte unit, byte ctrl, Pointer<? > data, int len) {
		return uvc_set_ctrl(Pointer.getPeer(devh), unit, ctrl, Pointer.getPeer(data), len);
	}
	protected native static int uvc_set_ctrl(@Ptr long devh, byte unit, byte ctrl, @Ptr long data, int len);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_power_mode(uvc_device_handle_t*, uvc_device_power_mode*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:421</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_power_mode(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<IntValuedEnum<UvcLibrary.uvc_device_power_mode > > mode, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_power_mode(Pointer.getPeer(devh), Pointer.getPeer(mode), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_power_mode(@Ptr long devh, @Ptr long mode, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_power_mode(uvc_device_handle_t*, uvc_device_power_mode)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:423</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_power_mode(Pointer<UvcLibrary.uvc_device_handle > devh, IntValuedEnum<UvcLibrary.uvc_device_power_mode > mode) {
		return FlagSet.fromValue(uvc_set_power_mode(Pointer.getPeer(devh), (int)mode.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_power_mode(@Ptr long devh, int mode);
	/**
	 * AUTO-GENERATED control accessors! Update them with the output of `ctrl-gen.py decl`.<br>
	 * Original signature : <code>uvc_error_t uvc_get_scanning_mode(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:428</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_scanning_mode(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > mode, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_scanning_mode(Pointer.getPeer(devh), Pointer.getPeer(mode), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_scanning_mode(@Ptr long devh, @Ptr long mode, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_scanning_mode(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:430</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_scanning_mode(Pointer<UvcLibrary.uvc_device_handle > devh, byte mode) {
		return FlagSet.fromValue(uvc_set_scanning_mode(Pointer.getPeer(devh), mode), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_scanning_mode(@Ptr long devh, byte mode);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_ae_mode(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:432</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_ae_mode(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > mode, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_ae_mode(Pointer.getPeer(devh), Pointer.getPeer(mode), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_ae_mode(@Ptr long devh, @Ptr long mode, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_ae_mode(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:434</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_ae_mode(Pointer<UvcLibrary.uvc_device_handle > devh, byte mode) {
		return FlagSet.fromValue(uvc_set_ae_mode(Pointer.getPeer(devh), mode), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_ae_mode(@Ptr long devh, byte mode);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_ae_priority(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:436</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_ae_priority(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > priority, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_ae_priority(Pointer.getPeer(devh), Pointer.getPeer(priority), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_ae_priority(@Ptr long devh, @Ptr long priority, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_ae_priority(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:438</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_ae_priority(Pointer<UvcLibrary.uvc_device_handle > devh, byte priority) {
		return FlagSet.fromValue(uvc_set_ae_priority(Pointer.getPeer(devh), priority), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_ae_priority(@Ptr long devh, byte priority);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_exposure_abs(uvc_device_handle_t*, uint32_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:440</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_exposure_abs(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Integer > time, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_exposure_abs(Pointer.getPeer(devh), Pointer.getPeer(time), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_exposure_abs(@Ptr long devh, @Ptr long time, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_exposure_abs(uvc_device_handle_t*, uint32_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:442</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_exposure_abs(Pointer<UvcLibrary.uvc_device_handle > devh, int time) {
		return FlagSet.fromValue(uvc_set_exposure_abs(Pointer.getPeer(devh), time), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_exposure_abs(@Ptr long devh, int time);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_exposure_rel(uvc_device_handle_t*, int8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:444</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_exposure_rel(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > step, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_exposure_rel(Pointer.getPeer(devh), Pointer.getPeer(step), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_exposure_rel(@Ptr long devh, @Ptr long step, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_exposure_rel(uvc_device_handle_t*, int8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:446</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_exposure_rel(Pointer<UvcLibrary.uvc_device_handle > devh, byte step) {
		return FlagSet.fromValue(uvc_set_exposure_rel(Pointer.getPeer(devh), step), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_exposure_rel(@Ptr long devh, byte step);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_focus_abs(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:448</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_focus_abs(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > focus, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_focus_abs(Pointer.getPeer(devh), Pointer.getPeer(focus), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_focus_abs(@Ptr long devh, @Ptr long focus, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_focus_abs(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:450</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_focus_abs(Pointer<UvcLibrary.uvc_device_handle > devh, short focus) {
		return FlagSet.fromValue(uvc_set_focus_abs(Pointer.getPeer(devh), focus), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_focus_abs(@Ptr long devh, short focus);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_focus_rel(uvc_device_handle_t*, int8_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:452</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_focus_rel(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > focus_rel, Pointer<Byte > speed, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_focus_rel(Pointer.getPeer(devh), Pointer.getPeer(focus_rel), Pointer.getPeer(speed), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_focus_rel(@Ptr long devh, @Ptr long focus_rel, @Ptr long speed, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_focus_rel(uvc_device_handle_t*, int8_t, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:454</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_focus_rel(Pointer<UvcLibrary.uvc_device_handle > devh, byte focus_rel, byte speed) {
		return FlagSet.fromValue(uvc_set_focus_rel(Pointer.getPeer(devh), focus_rel, speed), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_focus_rel(@Ptr long devh, byte focus_rel, byte speed);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_focus_simple_range(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:456</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_focus_simple_range(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > focus, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_focus_simple_range(Pointer.getPeer(devh), Pointer.getPeer(focus), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_focus_simple_range(@Ptr long devh, @Ptr long focus, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_focus_simple_range(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:458</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_focus_simple_range(Pointer<UvcLibrary.uvc_device_handle > devh, byte focus) {
		return FlagSet.fromValue(uvc_set_focus_simple_range(Pointer.getPeer(devh), focus), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_focus_simple_range(@Ptr long devh, byte focus);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_focus_auto(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:460</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_focus_auto(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > state, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_focus_auto(Pointer.getPeer(devh), Pointer.getPeer(state), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_focus_auto(@Ptr long devh, @Ptr long state, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_focus_auto(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:462</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_focus_auto(Pointer<UvcLibrary.uvc_device_handle > devh, byte state) {
		return FlagSet.fromValue(uvc_set_focus_auto(Pointer.getPeer(devh), state), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_focus_auto(@Ptr long devh, byte state);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_iris_abs(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:464</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_iris_abs(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > iris, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_iris_abs(Pointer.getPeer(devh), Pointer.getPeer(iris), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_iris_abs(@Ptr long devh, @Ptr long iris, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_iris_abs(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:466</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_iris_abs(Pointer<UvcLibrary.uvc_device_handle > devh, short iris) {
		return FlagSet.fromValue(uvc_set_iris_abs(Pointer.getPeer(devh), iris), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_iris_abs(@Ptr long devh, short iris);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_iris_rel(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:468</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_iris_rel(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > iris_rel, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_iris_rel(Pointer.getPeer(devh), Pointer.getPeer(iris_rel), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_iris_rel(@Ptr long devh, @Ptr long iris_rel, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_iris_rel(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:470</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_iris_rel(Pointer<UvcLibrary.uvc_device_handle > devh, byte iris_rel) {
		return FlagSet.fromValue(uvc_set_iris_rel(Pointer.getPeer(devh), iris_rel), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_iris_rel(@Ptr long devh, byte iris_rel);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_zoom_abs(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:472</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_zoom_abs(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > focal_length, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_zoom_abs(Pointer.getPeer(devh), Pointer.getPeer(focal_length), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_zoom_abs(@Ptr long devh, @Ptr long focal_length, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_zoom_abs(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:474</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_zoom_abs(Pointer<UvcLibrary.uvc_device_handle > devh, short focal_length) {
		return FlagSet.fromValue(uvc_set_zoom_abs(Pointer.getPeer(devh), focal_length), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_zoom_abs(@Ptr long devh, short focal_length);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_zoom_rel(uvc_device_handle_t*, int8_t*, uint8_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:476</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_zoom_rel(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > zoom_rel, Pointer<Byte > digital_zoom, Pointer<Byte > speed, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_zoom_rel(Pointer.getPeer(devh), Pointer.getPeer(zoom_rel), Pointer.getPeer(digital_zoom), Pointer.getPeer(speed), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_zoom_rel(@Ptr long devh, @Ptr long zoom_rel, @Ptr long digital_zoom, @Ptr long speed, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_zoom_rel(uvc_device_handle_t*, int8_t, uint8_t, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:478</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_zoom_rel(Pointer<UvcLibrary.uvc_device_handle > devh, byte zoom_rel, byte digital_zoom, byte speed) {
		return FlagSet.fromValue(uvc_set_zoom_rel(Pointer.getPeer(devh), zoom_rel, digital_zoom, speed), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_zoom_rel(@Ptr long devh, byte zoom_rel, byte digital_zoom, byte speed);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_pantilt_abs(uvc_device_handle_t*, int32_t*, int32_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:480</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_pantilt_abs(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Integer > pan, Pointer<Integer > tilt, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_pantilt_abs(Pointer.getPeer(devh), Pointer.getPeer(pan), Pointer.getPeer(tilt), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_pantilt_abs(@Ptr long devh, @Ptr long pan, @Ptr long tilt, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_pantilt_abs(uvc_device_handle_t*, int32_t, int32_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:482</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_pantilt_abs(Pointer<UvcLibrary.uvc_device_handle > devh, int pan, int tilt) {
		return FlagSet.fromValue(uvc_set_pantilt_abs(Pointer.getPeer(devh), pan, tilt), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_pantilt_abs(@Ptr long devh, int pan, int tilt);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_pantilt_rel(uvc_device_handle_t*, int8_t*, uint8_t*, int8_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:484</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_pantilt_rel(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > pan_rel, Pointer<Byte > pan_speed, Pointer<Byte > tilt_rel, Pointer<Byte > tilt_speed, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_pantilt_rel(Pointer.getPeer(devh), Pointer.getPeer(pan_rel), Pointer.getPeer(pan_speed), Pointer.getPeer(tilt_rel), Pointer.getPeer(tilt_speed), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_pantilt_rel(@Ptr long devh, @Ptr long pan_rel, @Ptr long pan_speed, @Ptr long tilt_rel, @Ptr long tilt_speed, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_pantilt_rel(uvc_device_handle_t*, int8_t, uint8_t, int8_t, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:486</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_pantilt_rel(Pointer<UvcLibrary.uvc_device_handle > devh, byte pan_rel, byte pan_speed, byte tilt_rel, byte tilt_speed) {
		return FlagSet.fromValue(uvc_set_pantilt_rel(Pointer.getPeer(devh), pan_rel, pan_speed, tilt_rel, tilt_speed), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_pantilt_rel(@Ptr long devh, byte pan_rel, byte pan_speed, byte tilt_rel, byte tilt_speed);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_roll_abs(uvc_device_handle_t*, int16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:488</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_roll_abs(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > roll, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_roll_abs(Pointer.getPeer(devh), Pointer.getPeer(roll), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_roll_abs(@Ptr long devh, @Ptr long roll, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_roll_abs(uvc_device_handle_t*, int16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:490</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_roll_abs(Pointer<UvcLibrary.uvc_device_handle > devh, short roll) {
		return FlagSet.fromValue(uvc_set_roll_abs(Pointer.getPeer(devh), roll), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_roll_abs(@Ptr long devh, short roll);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_roll_rel(uvc_device_handle_t*, int8_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:492</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_roll_rel(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > roll_rel, Pointer<Byte > speed, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_roll_rel(Pointer.getPeer(devh), Pointer.getPeer(roll_rel), Pointer.getPeer(speed), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_roll_rel(@Ptr long devh, @Ptr long roll_rel, @Ptr long speed, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_roll_rel(uvc_device_handle_t*, int8_t, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:494</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_roll_rel(Pointer<UvcLibrary.uvc_device_handle > devh, byte roll_rel, byte speed) {
		return FlagSet.fromValue(uvc_set_roll_rel(Pointer.getPeer(devh), roll_rel, speed), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_roll_rel(@Ptr long devh, byte roll_rel, byte speed);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_privacy(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:496</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_privacy(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > privacy, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_privacy(Pointer.getPeer(devh), Pointer.getPeer(privacy), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_privacy(@Ptr long devh, @Ptr long privacy, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_privacy(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:498</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_privacy(Pointer<UvcLibrary.uvc_device_handle > devh, byte privacy) {
		return FlagSet.fromValue(uvc_set_privacy(Pointer.getPeer(devh), privacy), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_privacy(@Ptr long devh, byte privacy);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_digital_window(uvc_device_handle_t*, uint16_t*, uint16_t*, uint16_t*, uint16_t*, uint16_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:500</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_digital_window(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > window_top, Pointer<Short > window_left, Pointer<Short > window_bottom, Pointer<Short > window_right, Pointer<Short > num_steps, Pointer<Short > num_steps_units, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_digital_window(Pointer.getPeer(devh), Pointer.getPeer(window_top), Pointer.getPeer(window_left), Pointer.getPeer(window_bottom), Pointer.getPeer(window_right), Pointer.getPeer(num_steps), Pointer.getPeer(num_steps_units), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_digital_window(@Ptr long devh, @Ptr long window_top, @Ptr long window_left, @Ptr long window_bottom, @Ptr long window_right, @Ptr long num_steps, @Ptr long num_steps_units, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_digital_window(uvc_device_handle_t*, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:502</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_digital_window(Pointer<UvcLibrary.uvc_device_handle > devh, short window_top, short window_left, short window_bottom, short window_right, short num_steps, short num_steps_units) {
		return FlagSet.fromValue(uvc_set_digital_window(Pointer.getPeer(devh), window_top, window_left, window_bottom, window_right, num_steps, num_steps_units), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_digital_window(@Ptr long devh, short window_top, short window_left, short window_bottom, short window_right, short num_steps, short num_steps_units);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_digital_roi(uvc_device_handle_t*, uint16_t*, uint16_t*, uint16_t*, uint16_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:504</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_digital_roi(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > roi_top, Pointer<Short > roi_left, Pointer<Short > roi_bottom, Pointer<Short > roi_right, Pointer<Short > auto_controls, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_digital_roi(Pointer.getPeer(devh), Pointer.getPeer(roi_top), Pointer.getPeer(roi_left), Pointer.getPeer(roi_bottom), Pointer.getPeer(roi_right), Pointer.getPeer(auto_controls), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_digital_roi(@Ptr long devh, @Ptr long roi_top, @Ptr long roi_left, @Ptr long roi_bottom, @Ptr long roi_right, @Ptr long auto_controls, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_digital_roi(uvc_device_handle_t*, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:506</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_digital_roi(Pointer<UvcLibrary.uvc_device_handle > devh, short roi_top, short roi_left, short roi_bottom, short roi_right, short auto_controls) {
		return FlagSet.fromValue(uvc_set_digital_roi(Pointer.getPeer(devh), roi_top, roi_left, roi_bottom, roi_right, auto_controls), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_digital_roi(@Ptr long devh, short roi_top, short roi_left, short roi_bottom, short roi_right, short auto_controls);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_backlight_compensation(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:508</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_backlight_compensation(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > backlight_compensation, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_backlight_compensation(Pointer.getPeer(devh), Pointer.getPeer(backlight_compensation), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_backlight_compensation(@Ptr long devh, @Ptr long backlight_compensation, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_backlight_compensation(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:510</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_backlight_compensation(Pointer<UvcLibrary.uvc_device_handle > devh, short backlight_compensation) {
		return FlagSet.fromValue(uvc_set_backlight_compensation(Pointer.getPeer(devh), backlight_compensation), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_backlight_compensation(@Ptr long devh, short backlight_compensation);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_brightness(uvc_device_handle_t*, int16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:512</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_brightness(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > brightness, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_brightness(Pointer.getPeer(devh), Pointer.getPeer(brightness), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_brightness(@Ptr long devh, @Ptr long brightness, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_brightness(uvc_device_handle_t*, int16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:514</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_brightness(Pointer<UvcLibrary.uvc_device_handle > devh, short brightness) {
		return FlagSet.fromValue(uvc_set_brightness(Pointer.getPeer(devh), brightness), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_brightness(@Ptr long devh, short brightness);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_contrast(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:516</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_contrast(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > contrast, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_contrast(Pointer.getPeer(devh), Pointer.getPeer(contrast), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_contrast(@Ptr long devh, @Ptr long contrast, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_contrast(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:518</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_contrast(Pointer<UvcLibrary.uvc_device_handle > devh, short contrast) {
		return FlagSet.fromValue(uvc_set_contrast(Pointer.getPeer(devh), contrast), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_contrast(@Ptr long devh, short contrast);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_contrast_auto(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:520</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_contrast_auto(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > contrast_auto, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_contrast_auto(Pointer.getPeer(devh), Pointer.getPeer(contrast_auto), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_contrast_auto(@Ptr long devh, @Ptr long contrast_auto, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_contrast_auto(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:522</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_contrast_auto(Pointer<UvcLibrary.uvc_device_handle > devh, byte contrast_auto) {
		return FlagSet.fromValue(uvc_set_contrast_auto(Pointer.getPeer(devh), contrast_auto), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_contrast_auto(@Ptr long devh, byte contrast_auto);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_gain(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:524</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_gain(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > gain, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_gain(Pointer.getPeer(devh), Pointer.getPeer(gain), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_gain(@Ptr long devh, @Ptr long gain, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_gain(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:526</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_gain(Pointer<UvcLibrary.uvc_device_handle > devh, short gain) {
		return FlagSet.fromValue(uvc_set_gain(Pointer.getPeer(devh), gain), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_gain(@Ptr long devh, short gain);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_power_line_frequency(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:528</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_power_line_frequency(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > power_line_frequency, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_power_line_frequency(Pointer.getPeer(devh), Pointer.getPeer(power_line_frequency), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_power_line_frequency(@Ptr long devh, @Ptr long power_line_frequency, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_power_line_frequency(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:530</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_power_line_frequency(Pointer<UvcLibrary.uvc_device_handle > devh, byte power_line_frequency) {
		return FlagSet.fromValue(uvc_set_power_line_frequency(Pointer.getPeer(devh), power_line_frequency), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_power_line_frequency(@Ptr long devh, byte power_line_frequency);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_hue(uvc_device_handle_t*, int16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:532</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_hue(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > hue, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_hue(Pointer.getPeer(devh), Pointer.getPeer(hue), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_hue(@Ptr long devh, @Ptr long hue, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_hue(uvc_device_handle_t*, int16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:534</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_hue(Pointer<UvcLibrary.uvc_device_handle > devh, short hue) {
		return FlagSet.fromValue(uvc_set_hue(Pointer.getPeer(devh), hue), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_hue(@Ptr long devh, short hue);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_hue_auto(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:536</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_hue_auto(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > hue_auto, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_hue_auto(Pointer.getPeer(devh), Pointer.getPeer(hue_auto), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_hue_auto(@Ptr long devh, @Ptr long hue_auto, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_hue_auto(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:538</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_hue_auto(Pointer<UvcLibrary.uvc_device_handle > devh, byte hue_auto) {
		return FlagSet.fromValue(uvc_set_hue_auto(Pointer.getPeer(devh), hue_auto), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_hue_auto(@Ptr long devh, byte hue_auto);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_saturation(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:540</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_saturation(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > saturation, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_saturation(Pointer.getPeer(devh), Pointer.getPeer(saturation), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_saturation(@Ptr long devh, @Ptr long saturation, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_saturation(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:542</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_saturation(Pointer<UvcLibrary.uvc_device_handle > devh, short saturation) {
		return FlagSet.fromValue(uvc_set_saturation(Pointer.getPeer(devh), saturation), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_saturation(@Ptr long devh, short saturation);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_sharpness(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:544</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_sharpness(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > sharpness, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_sharpness(Pointer.getPeer(devh), Pointer.getPeer(sharpness), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_sharpness(@Ptr long devh, @Ptr long sharpness, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_sharpness(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:546</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_sharpness(Pointer<UvcLibrary.uvc_device_handle > devh, short sharpness) {
		return FlagSet.fromValue(uvc_set_sharpness(Pointer.getPeer(devh), sharpness), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_sharpness(@Ptr long devh, short sharpness);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_gamma(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:548</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_gamma(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > gamma, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_gamma(Pointer.getPeer(devh), Pointer.getPeer(gamma), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_gamma(@Ptr long devh, @Ptr long gamma, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_gamma(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:550</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_gamma(Pointer<UvcLibrary.uvc_device_handle > devh, short gamma) {
		return FlagSet.fromValue(uvc_set_gamma(Pointer.getPeer(devh), gamma), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_gamma(@Ptr long devh, short gamma);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_white_balance_temperature(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:552</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_white_balance_temperature(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > temperature, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_white_balance_temperature(Pointer.getPeer(devh), Pointer.getPeer(temperature), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_white_balance_temperature(@Ptr long devh, @Ptr long temperature, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_white_balance_temperature(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:554</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_white_balance_temperature(Pointer<UvcLibrary.uvc_device_handle > devh, short temperature) {
		return FlagSet.fromValue(uvc_set_white_balance_temperature(Pointer.getPeer(devh), temperature), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_white_balance_temperature(@Ptr long devh, short temperature);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_white_balance_temperature_auto(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:556</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_white_balance_temperature_auto(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > temperature_auto, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_white_balance_temperature_auto(Pointer.getPeer(devh), Pointer.getPeer(temperature_auto), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_white_balance_temperature_auto(@Ptr long devh, @Ptr long temperature_auto, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_white_balance_temperature_auto(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:558</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_white_balance_temperature_auto(Pointer<UvcLibrary.uvc_device_handle > devh, byte temperature_auto) {
		return FlagSet.fromValue(uvc_set_white_balance_temperature_auto(Pointer.getPeer(devh), temperature_auto), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_white_balance_temperature_auto(@Ptr long devh, byte temperature_auto);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_white_balance_component(uvc_device_handle_t*, uint16_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:560</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_white_balance_component(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > blue, Pointer<Short > red, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_white_balance_component(Pointer.getPeer(devh), Pointer.getPeer(blue), Pointer.getPeer(red), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_white_balance_component(@Ptr long devh, @Ptr long blue, @Ptr long red, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_white_balance_component(uvc_device_handle_t*, uint16_t, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:562</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_white_balance_component(Pointer<UvcLibrary.uvc_device_handle > devh, short blue, short red) {
		return FlagSet.fromValue(uvc_set_white_balance_component(Pointer.getPeer(devh), blue, red), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_white_balance_component(@Ptr long devh, short blue, short red);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_white_balance_component_auto(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:564</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_white_balance_component_auto(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > white_balance_component_auto, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_white_balance_component_auto(Pointer.getPeer(devh), Pointer.getPeer(white_balance_component_auto), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_white_balance_component_auto(@Ptr long devh, @Ptr long white_balance_component_auto, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_white_balance_component_auto(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:566</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_white_balance_component_auto(Pointer<UvcLibrary.uvc_device_handle > devh, byte white_balance_component_auto) {
		return FlagSet.fromValue(uvc_set_white_balance_component_auto(Pointer.getPeer(devh), white_balance_component_auto), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_white_balance_component_auto(@Ptr long devh, byte white_balance_component_auto);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_digital_multiplier(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:568</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_digital_multiplier(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > multiplier_step, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_digital_multiplier(Pointer.getPeer(devh), Pointer.getPeer(multiplier_step), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_digital_multiplier(@Ptr long devh, @Ptr long multiplier_step, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_digital_multiplier(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:570</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_digital_multiplier(Pointer<UvcLibrary.uvc_device_handle > devh, short multiplier_step) {
		return FlagSet.fromValue(uvc_set_digital_multiplier(Pointer.getPeer(devh), multiplier_step), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_digital_multiplier(@Ptr long devh, short multiplier_step);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_digital_multiplier_limit(uvc_device_handle_t*, uint16_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:572</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_digital_multiplier_limit(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Short > multiplier_step, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_digital_multiplier_limit(Pointer.getPeer(devh), Pointer.getPeer(multiplier_step), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_digital_multiplier_limit(@Ptr long devh, @Ptr long multiplier_step, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_digital_multiplier_limit(uvc_device_handle_t*, uint16_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:574</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_digital_multiplier_limit(Pointer<UvcLibrary.uvc_device_handle > devh, short multiplier_step) {
		return FlagSet.fromValue(uvc_set_digital_multiplier_limit(Pointer.getPeer(devh), multiplier_step), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_digital_multiplier_limit(@Ptr long devh, short multiplier_step);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_analog_video_standard(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:576</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_analog_video_standard(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > video_standard, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_analog_video_standard(Pointer.getPeer(devh), Pointer.getPeer(video_standard), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_analog_video_standard(@Ptr long devh, @Ptr long video_standard, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_analog_video_standard(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:578</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_analog_video_standard(Pointer<UvcLibrary.uvc_device_handle > devh, byte video_standard) {
		return FlagSet.fromValue(uvc_set_analog_video_standard(Pointer.getPeer(devh), video_standard), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_analog_video_standard(@Ptr long devh, byte video_standard);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_analog_video_lock_status(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:580</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_analog_video_lock_status(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > status, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_analog_video_lock_status(Pointer.getPeer(devh), Pointer.getPeer(status), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_analog_video_lock_status(@Ptr long devh, @Ptr long status, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_analog_video_lock_status(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:582</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_analog_video_lock_status(Pointer<UvcLibrary.uvc_device_handle > devh, byte status) {
		return FlagSet.fromValue(uvc_set_analog_video_lock_status(Pointer.getPeer(devh), status), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_analog_video_lock_status(@Ptr long devh, byte status);
	/**
	 * Original signature : <code>uvc_error_t uvc_get_input_select(uvc_device_handle_t*, uint8_t*, uvc_req_code)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:584</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_get_input_select(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<Byte > selector, IntValuedEnum<UvcLibrary.uvc_req_code > req_code) {
		return FlagSet.fromValue(uvc_get_input_select(Pointer.getPeer(devh), Pointer.getPeer(selector), (int)req_code.value()), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_get_input_select(@Ptr long devh, @Ptr long selector, int req_code);
	/**
	 * Original signature : <code>uvc_error_t uvc_set_input_select(uvc_device_handle_t*, uint8_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:586</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_set_input_select(Pointer<UvcLibrary.uvc_device_handle > devh, byte selector) {
		return FlagSet.fromValue(uvc_set_input_select(Pointer.getPeer(devh), selector), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_set_input_select(@Ptr long devh, byte selector);
	/**
	 * end AUTO-GENERATED control accessors<br>
	 * Original signature : <code>void uvc_perror(uvc_error_t, const char*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:591</i>
	 */
	public static void uvc_perror(IntValuedEnum<UvcLibrary.uvc_error > err, Pointer<Byte > msg) {
		uvc_perror((int)err.value(), Pointer.getPeer(msg));
	}
	protected native static void uvc_perror(int err, @Ptr long msg);
	/**
	 * Original signature : <code>char* uvc_strerror(uvc_error_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:593</i>
	 */
	public static Pointer<Byte > uvc_strerror(IntValuedEnum<UvcLibrary.uvc_error > err) {
		return (Pointer)Pointer.pointerToAddress(uvc_strerror((int)err.value()), Byte.class);
	}
	@Ptr 
	protected native static long uvc_strerror(int err);
	/**
	 * Original signature : <code>void uvc_print_diag(uvc_device_handle_t*, FILE*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:595</i>
	 */
	public static void uvc_print_diag(Pointer<UvcLibrary.uvc_device_handle > devh, Pointer<UvcLibrary.FILE > stream) {
		uvc_print_diag(Pointer.getPeer(devh), Pointer.getPeer(stream));
	}
	protected native static void uvc_print_diag(@Ptr long devh, @Ptr long stream);
	/**
	 * Original signature : <code>void uvc_print_stream_ctrl(uvc_stream_ctrl_t*, FILE*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:597</i>
	 */
	public static void uvc_print_stream_ctrl(Pointer<uvc_stream_ctrl > ctrl, Pointer<UvcLibrary.FILE > stream) {
		uvc_print_stream_ctrl(Pointer.getPeer(ctrl), Pointer.getPeer(stream));
	}
	protected native static void uvc_print_stream_ctrl(@Ptr long ctrl, @Ptr long stream);
	/**
	 * Original signature : <code>uvc_frame_t* uvc_allocate_frame(size_t)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:599</i>
	 */
	public static Pointer<uvc_frame > uvc_allocate_frame(@Ptr long data_bytes) {
		return (Pointer)Pointer.pointerToAddress(uvc_allocate_frame$2(data_bytes), uvc_frame.class);
	}
	@Ptr 
	@Name("uvc_allocate_frame") 
	protected native static long uvc_allocate_frame$2(@Ptr long data_bytes);
	/**
	 * Original signature : <code>void uvc_free_frame(uvc_frame_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:601</i>
	 */
	public static void uvc_free_frame(Pointer<uvc_frame > frame) {
		uvc_free_frame(Pointer.getPeer(frame));
	}
	protected native static void uvc_free_frame(@Ptr long frame);
	/**
	 * Original signature : <code>uvc_error_t uvc_duplicate_frame(uvc_frame_t*, uvc_frame_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:603</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_duplicate_frame(Pointer<uvc_frame > in, Pointer<uvc_frame > out) {
		return FlagSet.fromValue(uvc_duplicate_frame(Pointer.getPeer(in), Pointer.getPeer(out)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_duplicate_frame(@Ptr long in, @Ptr long out);
	/**
	 * Original signature : <code>uvc_error_t uvc_yuyv2rgb(uvc_frame_t*, uvc_frame_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:605</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_yuyv2rgb(Pointer<uvc_frame > in, Pointer<uvc_frame > out) {
		return FlagSet.fromValue(uvc_yuyv2rgb(Pointer.getPeer(in), Pointer.getPeer(out)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_yuyv2rgb(@Ptr long in, @Ptr long out);
	/**
	 * Original signature : <code>uvc_error_t uvc_uyvy2rgb(uvc_frame_t*, uvc_frame_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:607</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_uyvy2rgb(Pointer<uvc_frame > in, Pointer<uvc_frame > out) {
		return FlagSet.fromValue(uvc_uyvy2rgb(Pointer.getPeer(in), Pointer.getPeer(out)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_uyvy2rgb(@Ptr long in, @Ptr long out);
	/**
	 * Original signature : <code>uvc_error_t uvc_any2rgb(uvc_frame_t*, uvc_frame_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:609</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_any2rgb(Pointer<uvc_frame > in, Pointer<uvc_frame > out) {
		return FlagSet.fromValue(uvc_any2rgb(Pointer.getPeer(in), Pointer.getPeer(out)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_any2rgb(@Ptr long in, @Ptr long out);
	/**
	 * Original signature : <code>uvc_error_t uvc_yuyv2bgr(uvc_frame_t*, uvc_frame_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:611</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_yuyv2bgr(Pointer<uvc_frame > in, Pointer<uvc_frame > out) {
		return FlagSet.fromValue(uvc_yuyv2bgr(Pointer.getPeer(in), Pointer.getPeer(out)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_yuyv2bgr(@Ptr long in, @Ptr long out);
	/**
	 * Original signature : <code>uvc_error_t uvc_uyvy2bgr(uvc_frame_t*, uvc_frame_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:613</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_uyvy2bgr(Pointer<uvc_frame > in, Pointer<uvc_frame > out) {
		return FlagSet.fromValue(uvc_uyvy2bgr(Pointer.getPeer(in), Pointer.getPeer(out)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_uyvy2bgr(@Ptr long in, @Ptr long out);
	/**
	 * Original signature : <code>uvc_error_t uvc_any2bgr(uvc_frame_t*, uvc_frame_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:615</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_any2bgr(Pointer<uvc_frame > in, Pointer<uvc_frame > out) {
		return FlagSet.fromValue(uvc_any2bgr(Pointer.getPeer(in), Pointer.getPeer(out)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_any2bgr(@Ptr long in, @Ptr long out);
	/**
	 * Original signature : <code>uvc_error_t uvc_yuyv2y(uvc_frame_t*, uvc_frame_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:617</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_yuyv2y(Pointer<uvc_frame > in, Pointer<uvc_frame > out) {
		return FlagSet.fromValue(uvc_yuyv2y(Pointer.getPeer(in), Pointer.getPeer(out)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_yuyv2y(@Ptr long in, @Ptr long out);
	/**
	 * Original signature : <code>uvc_error_t uvc_yuyv2uv(uvc_frame_t*, uvc_frame_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:619</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_yuyv2uv(Pointer<uvc_frame > in, Pointer<uvc_frame > out) {
		return FlagSet.fromValue(uvc_yuyv2uv(Pointer.getPeer(in), Pointer.getPeer(out)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_yuyv2uv(@Ptr long in, @Ptr long out);
	/**
	 * Original signature : <code>uvc_error_t uvc_mjpeg2rgb(uvc_frame_t*, uvc_frame_t*)</code><br>
	 * <i>native declaration : /usr/local/Cellar/libuvc/HEAD/include/libuvc/libuvc.h:621</i>
	 */
	public static IntValuedEnum<UvcLibrary.uvc_error > uvc_mjpeg2rgb(Pointer<uvc_frame > in, Pointer<uvc_frame > out) {
		return FlagSet.fromValue(uvc_mjpeg2rgb(Pointer.getPeer(in), Pointer.getPeer(out)), UvcLibrary.uvc_error.class);
	}
	protected native static int uvc_mjpeg2rgb(@Ptr long in, @Ptr long out);
	/** Undefined type */
	public static interface uvc_device_handle {
		
	};
	/** Undefined type */
	public static interface libusb_context {
		
	};
	/** Undefined type */
	public static interface libusb_device_handle {
		
	};
	/** Undefined type */
	public static interface uvc_streaming_interface {
		
	};
	/** Undefined type */
	public static interface uvc_device {
		
	};
	/** Undefined type */
	public static interface uvc_stream_handle {
		
	};
	/** Undefined type */
	public static interface timeval {
		
	};
	/** Undefined type */
	public static interface FILE {
		
	};
	/** Undefined type */
	public static interface uvc_context {
		
	};
}
